#ifndef SHELL
#define SHELL

#include <iostream>
#include <string>
#include <unistd.h>
#include <vector>

#include "path_resolver.h"
#include "piped_commands.h"

/*
 *  Support input/output on each command.
 *  Handle signals properly. ProcessGroup abstraction?
 */

class Shell {
public:
	Shell(const PathResolver& path_resolver):
		path_resolver_(path_resolver) {};

	Shell() {};

	int Execute(const PipedCommands& piped_cmds);
private:
	void Run(Command cmd) const;
	struct PipeDescriptor {
		PipeDescriptor(int read_fd_arg, int write_fd_arg): read_fd(read_fd_arg),
			write_fd(write_fd_arg) {}

		int read_fd;
		int write_fd;
	};

	PathResolver path_resolver_;
};


#endif  //  SHELL
